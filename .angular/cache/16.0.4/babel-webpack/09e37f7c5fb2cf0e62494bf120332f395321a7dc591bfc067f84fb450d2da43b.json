{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/store.service\";\nclass ProductCartComponent {\n  constructor(storeService) {\n    this.storeService = storeService;\n    this.cartItems$ = this.storeService.cartItems$;\n    this.total$ = this.storeService.total$;\n  }\n  removeItemFromCart(product) {\n    this.storeService.removeItemFromCart(product);\n  }\n}\nProductCartComponent.ɵfac = function ProductCartComponent_Factory(t) {\n  return new (t || ProductCartComponent)(i0.ɵɵdirectiveInject(i1.StoreService));\n};\nProductCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductCartComponent,\n  selectors: [[\"app-product-cart\"]],\n  inputs: {\n    data: \"data\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ProductCartComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ProductCartComponent };","map":{"version":3,"names":["ProductCartComponent","constructor","storeService","cartItems$","total$","removeItemFromCart","product","i0","ɵɵdirectiveInject","i1","StoreService","selectors","inputs","data","decls","vars","template","ProductCartComponent_Template","rf","ctx","styles"],"sources":["/Users/maimunawahaibi/Desktop/angular-first/src/app/components/product-cart/product-cart.component.ts"],"sourcesContent":["import { Component, InjectionToken, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CartItem } from '../../interfaces/cart.interface';\nimport { StoreService } from 'src/app/services/store.service';\nimport { Product } from 'src/app/interfaces/product.interface';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-product-cart',\n  templateUrl: './product-cart.component.html',\n  styleUrls: ['./product-cart.component.css'],\n})\nexport class ProductCartComponent {\n  @Input()\n  data!: Observable<CartItem[]>;\n  cartItems$: Observable<CartItem[]>;\n  total$: Observable<number>;\n\n  constructor(private storeService: StoreService) {\n    this.cartItems$ = this.storeService.cartItems$;\n    this.total$ = this.storeService.total$;\n  }\n\n \n\n  removeItemFromCart(product: Product): void {\n    this.storeService.removeItemFromCart(product);\n  }\n}\n\n\n"],"mappings":";;AAOA,MAKaA,oBAAoB;EAM/BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAC9B,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,YAAY,CAACC,UAAU;IAC9C,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,YAAY,CAACE,MAAM;EACxC;EAIAC,kBAAkBA,CAACC,OAAgB;IACjC,IAAI,CAACJ,YAAY,CAACG,kBAAkB,CAACC,OAAO,CAAC;EAC/C;;AAfWN,oBAAoB,C;mBAApBA,oBAAoB,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAApBV,oBAAoB,C;QAApBA,oBAAoB;EAAAW,SAAA;EAAAC,MAAA;IAAAC,IAAA;EAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;EAAAC,MAAA;AAAA;SAApBpB,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}