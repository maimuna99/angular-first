{"ast":null,"code":"import { ajax } from 'rxjs/ajax';\nimport { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass StoreService {\n  constructor() {\n    this.cartItemsSubject = new BehaviorSubject([]);\n    this.search = new BehaviorSubject() < cartItems$;\n  }\n}\nStoreService.ɵfac = function StoreService_Factory(t) {\n  return new (t || StoreService)();\n};\nStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreService,\n  factory: StoreService.ɵfac,\n  providedIn: 'root'\n});\nexport { StoreService };\nthis.cartItemsSubject.asObservable();\nproducts$ = ajax.getJSON('/assets/data.json');\ntotal$ = this.cartItems$.pipe(map(items => items.reduce((acc, item) => acc + item.product.price * item.quantity, 0)));\naddItemToCart(product, Product);\nvoid {\n  const: currentItems = this.cartItemsSubject.getValue(),\n  const: itemIndex = currentItems.findIndex(item => item.product.id === product.id),\n  if(itemIndex) {}\n} > -1;\n{\n  const updatedItems = [...currentItems];\n  updatedItems[itemIndex].quantity++;\n  this.cartItemsSubject.next(updatedItems);\n}\n{\n  const newItem = {\n    product,\n    quantity: 1\n  };\n  const updatedItems = [...currentItems, newItem];\n  this.cartItemsSubject.next(updatedItems);\n}\nremoveItemFromCart(product, Product);\nvoid {\n  const: currentItems = this.cartItemsSubject.getValue(),\n  const: itemIndex = currentItems.findIndex(item => item.product.id === product.id),\n  if(itemIndex) {}\n} > -1;\n{\n  const updatedItems = [...currentItems];\n  if (updatedItems[itemIndex].quantity > 1) {\n    updatedItems[itemIndex].quantity--;\n  } else {\n    updatedItems.splice(itemIndex, 1);\n  }\n  this.cartItemsSubject.next(updatedItems);\n}","map":{"version":3,"names":["ajax","BehaviorSubject","map","StoreService","constructor","cartItemsSubject","search","cartItems$","factory","ɵfac","providedIn","asObservable","products$","getJSON","total$","pipe","items","reduce","acc","item","product","price","quantity","addItemToCart","Product","const","currentItems","getValue","itemIndex","findIndex","id","if","updatedItems","next","newItem","removeItemFromCart","splice"],"sources":["/Users/maimunawahaibi/Desktop/angular-first/src/app/services/store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ajax } from 'rxjs/ajax';\nimport { Observable, BehaviorSubject, map } from 'rxjs';\nimport { Product } from '../interfaces/product.interface';\nimport { CartItem } from '../interfaces/cart.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoreService {\n  private cartItemsSubject = new BehaviorSubject<CartItem[]>([]);\n  public search = new BehaviorSubject<\n  cartItems$ = this.cartItemsSubject.asObservable();\n  products$ = ajax.getJSON<Product[]>('/assets/data.json');\n\n  total$ = this.cartItems$.pipe(\n    map((items) =>\n      items.reduce((acc, item) => acc + item.product.price * item.quantity, 0)\n    )\n  );\n\n  addItemToCart(product: Product): void {\n    const currentItems = this.cartItemsSubject.getValue();\n    const itemIndex = currentItems.findIndex(\n      (item) => item.product.id === product.id\n    );\n\n    if (itemIndex > -1) {\n      const updatedItems = [...currentItems];\n      updatedItems[itemIndex].quantity++;\n      this.cartItemsSubject.next(updatedItems);\n    } else {\n      const newItem: CartItem = { product, quantity: 1 };\n      const updatedItems = [...currentItems, newItem];\n      this.cartItemsSubject.next(updatedItems);\n    }\n  }\n\n  removeItemFromCart(product: Product): void {\n    const currentItems = this.cartItemsSubject.getValue();\n    const itemIndex = currentItems.findIndex(\n      (item) => item.product.id === product.id\n    );\n\n    if (itemIndex > -1) {\n      const updatedItems = [...currentItems];\n      if (updatedItems[itemIndex].quantity > 1) {\n        updatedItems[itemIndex].quantity--;\n      } else {\n        updatedItems.splice(itemIndex, 1);\n      }\n      this.cartItemsSubject.next(updatedItems);\n    }\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,WAAW;AAChC,SAAqBC,eAAe,EAAEC,GAAG,QAAQ,MAAM;;AAIvD,MAGaC,YAAY;EAHzBC,YAAA;IAIU,KAAAC,gBAAgB,GAAG,IAAIJ,eAAe,CAAa,EAAE,CAAC;IACvD,KAAAK,MAAM,GAAG,IAAIL,eAAe,CAAf,CAAe,GACnCM,UAAU;;;AAHCJ,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAK,OAAA,EAAZL,YAAY,CAAAM,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPP,YAAY;AAGV,IAAI,CAACE,gBAAgB,CAACM,YAAY,EAAE;AACjDC,SAAS,GAAGZ,IAAI,CAACa,OAAO,CAAY,mBAAmB,CAAC;AAExDC,MAAM,GAAG,IAAI,CAACP,UAAU,CAACQ,IAAI,CAC3Bb,GAAG,CAAEc,KAAK,IACRA,KAAK,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,OAAO,CAACC,KAAK,GAAGF,IAAI,CAACG,QAAQ,EAAE,CAAC,CAAC,CACzE,CACF;AAEDC,aAAa,CAACH,OAAO,EAAEI,OAAO,CAAC;AAAE,KAAK;EACpCC,KAAK,EAACC,YAAY,GAAG,IAAI,CAACrB,gBAAgB,CAACsB,QAAQ,EAAE;EACrDF,KAAK,EAACG,SAAS,GAAGF,YAAY,CAACG,SAAS,CACrCV,IAAI,IAAKA,IAAI,CAACC,OAAO,CAACU,EAAE,KAAKV,OAAO,CAACU,EAAE,CACzC;EAEDC,EAAEA,CAAEH,SAAS,GAAC;CAAD,GAAG,CAAC,CAAC;AAAE;EAClB,MAAMI,YAAY,GAAG,CAAC,GAAGN,YAAY,CAAC;EACtCM,YAAY,CAACJ,SAAS,CAAC,CAACN,QAAQ,EAAE;EAClC,IAAI,CAACjB,gBAAgB,CAAC4B,IAAI,CAACD,YAAY,CAAC;;AACnC;EACL,MAAME,OAAO,GAAa;IAAEd,OAAO;IAAEE,QAAQ,EAAE;EAAC,CAAE;EAClD,MAAMU,YAAY,GAAG,CAAC,GAAGN,YAAY,EAAEQ,OAAO,CAAC;EAC/C,IAAI,CAAC7B,gBAAgB,CAAC4B,IAAI,CAACD,YAAY,CAAC;;AAI5CG,kBAAkB,CAACf,OAAO,EAAEI,OAAO,CAAC;AAAE,KAAK;EACzCC,KAAK,EAACC,YAAY,GAAG,IAAI,CAACrB,gBAAgB,CAACsB,QAAQ,EAAE;EACrDF,KAAK,EAACG,SAAS,GAAGF,YAAY,CAACG,SAAS,CACrCV,IAAI,IAAKA,IAAI,CAACC,OAAO,CAACU,EAAE,KAAKV,OAAO,CAACU,EAAE,CACzC;EAEDC,EAAEA,CAAEH,SAAS,GAAC;CAAD,GAAG,CAAC,CAAC;AAAE;EAClB,MAAMI,YAAY,GAAG,CAAC,GAAGN,YAAY,CAAC;EACtC,IAAIM,YAAY,CAACJ,SAAS,CAAC,CAACN,QAAQ,GAAG,CAAC,EAAE;IACxCU,YAAY,CAACJ,SAAS,CAAC,CAACN,QAAQ,EAAE;GACnC,MAAM;IACLU,YAAY,CAACI,MAAM,CAACR,SAAS,EAAE,CAAC,CAAC;;EAEnC,IAAI,CAACvB,gBAAgB,CAAC4B,IAAI,CAACD,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}