{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass FilterPipe {\n  transform(value, filterString, propName) {\n    const result = [];\n    if (!value || filterString === '' || propName === '') {\n      return value;\n    }\n    value.forEach(a => {\n      if (a[propName].trim.toLowerCase.includes(filterString.toLowerCase())) {\n        result.push(a);\n      }\n    });\n    return result;\n  }\n}\nFilterPipe.ɵfac = function FilterPipe_Factory(t) {\n  return new (t || FilterPipe)();\n};\nFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: FilterPipe,\n  pure: true\n});\nexport { FilterPipe };","map":{"version":3,"names":["FilterPipe","transform","value","filterString","propName","result","forEach","a","trim","toLowerCase","includes","push","pure"],"sources":["/Users/maimunawahaibi/Desktop/angular-first/src/app/shared/filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(value: any, filterString: string, propName: string): any[] {\n    const result: any = [];\n    if (!value || filterString === '' || propName === '') {\n      return value;\n    }\n    value.forEach((a: any) => {\n      if (a[propName].trim.toLowerCase.includes(filterString.toLowerCase())) {\n        result.push(a);\n      }\n    });\n    return result;\n  }\n}\n"],"mappings":";AAEA,MAGaA,UAAU;EACrBC,SAASA,CAACC,KAAU,EAAEC,YAAoB,EAAEC,QAAgB;IAC1D,MAAMC,MAAM,GAAQ,EAAE;IACtB,IAAI,CAACH,KAAK,IAAIC,YAAY,KAAK,EAAE,IAAIC,QAAQ,KAAK,EAAE,EAAE;MACpD,OAAOF,KAAK;;IAEdA,KAAK,CAACI,OAAO,CAAEC,CAAM,IAAI;MACvB,IAAIA,CAAC,CAACH,QAAQ,CAAC,CAACI,IAAI,CAACC,WAAW,CAACC,QAAQ,CAACP,YAAY,CAACM,WAAW,EAAE,CAAC,EAAE;QACrEJ,MAAM,CAACM,IAAI,CAACJ,CAAC,CAAC;;IAElB,CAAC,CAAC;IACF,OAAOF,MAAM;EACf;;AAZWL,UAAU,C;mBAAVA,UAAU;AAAA;AAAVA,UAAU,C;;QAAVA,UAAU;EAAAY,IAAA;AAAA;SAAVZ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}