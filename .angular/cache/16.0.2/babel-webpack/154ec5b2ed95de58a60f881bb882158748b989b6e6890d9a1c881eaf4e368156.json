{"ast":null,"code":"import { ajax } from 'rxjs/ajax';\nimport { BehaviorSubject } from 'rxjs';\nimport { scan } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nclass StoreService {\n  constructor() {\n    this.cartItemsSubject = new BehaviorSubject([]);\n    // private totalSubject = new BehaviorSubject<number>(0);\n    //never expose subjects directly -> use observable\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n    //products observable\n    this.producst$ = ajax.getJSON('/assets/data.json');\n  }\n  //total observable\n  // total$ = this.totalSubject.asObservable();\n  addItemToCart(product) {\n    this.cartItemsSubject.next([...this.cartItemsSubject.getValue(), product]);\n    this.total$.pipe(scan((acc, val) => acc + val, product.price)).subscribe(total => {\n      this.total$.next(total);\n    });\n  }\n}\nStoreService.ɵfac = function StoreService_Factory(t) {\n  return new (t || StoreService)();\n};\nStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreService,\n  factory: StoreService.ɵfac,\n  providedIn: 'root'\n});\nexport { StoreService };","map":{"version":3,"names":["ajax","BehaviorSubject","scan","StoreService","constructor","cartItemsSubject","cartItems$","asObservable","producst$","getJSON","addItemToCart","product","next","getValue","total$","pipe","acc","val","price","subscribe","total","factory","ɵfac","providedIn"],"sources":["/Users/maimunawahaibi/Desktop/angular-first/src/app/services/store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ajax } from 'rxjs/ajax';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Product } from '../interfaces/product.interface';\nimport { scan } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoreService {\n  private cartItemsSubject = new BehaviorSubject<any>([]);\n  // private totalSubject = new BehaviorSubject<number>(0);\n  //never expose subjects directly -> use observable\n  cartItems$ = this.cartItemsSubject.asObservable();\n  //products observable\n  producst$ = ajax.getJSON<Product[]>('/assets/data.json');\n  //total observable\n  // total$ = this.totalSubject.asObservable();\n\n  addItemToCart(product: Product): void {\n    this.cartItemsSubject.next([...this.cartItemsSubject.getValue(), product]);\n    this.total$\n      .pipe(scan((acc, val) => acc + val, product.price))\n      .subscribe((total) => {\n        this.total$.next(total);\n      });\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,WAAW;AAChC,SAAqBC,eAAe,QAAQ,MAAM;AAElD,SAASC,IAAI,QAAQ,gBAAgB;;AAErC,MAGaC,YAAY;EAHzBC,YAAA;IAIU,KAAAC,gBAAgB,GAAG,IAAIJ,eAAe,CAAM,EAAE,CAAC;IACvD;IACA;IACA,KAAAK,UAAU,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;IACjD;IACA,KAAAC,SAAS,GAAGR,IAAI,CAACS,OAAO,CAAY,mBAAmB,CAAC;;EACxD;EACA;EAEAC,aAAaA,CAACC,OAAgB;IAC5B,IAAI,CAACN,gBAAgB,CAACO,IAAI,CAAC,CAAC,GAAG,IAAI,CAACP,gBAAgB,CAACQ,QAAQ,EAAE,EAAEF,OAAO,CAAC,CAAC;IAC1E,IAAI,CAACG,MAAM,CACRC,IAAI,CAACb,IAAI,CAAC,CAACc,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAEN,OAAO,CAACO,KAAK,CAAC,CAAC,CAClDC,SAAS,CAAEC,KAAK,IAAI;MACnB,IAAI,CAACN,MAAM,CAACF,IAAI,CAACQ,KAAK,CAAC;IACzB,CAAC,CAAC;EACN;;AAjBWjB,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPpB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}