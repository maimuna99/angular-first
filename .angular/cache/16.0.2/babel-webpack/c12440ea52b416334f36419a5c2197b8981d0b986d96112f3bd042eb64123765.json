{"ast":null,"code":"import { ajax } from 'rxjs/ajax';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass StoreService {\n  constructor() {\n    this.cartItemsSubject = new BehaviorSubject([]);\n    //never expose subjects directly -> use observable\n    this.carItems$ = this.\n    //products observable\n    producst$ = ajax.getJSON('/assets/data.json');\n  }\n}\nStoreService.ɵfac = function StoreService_Factory(t) {\n  return new (t || StoreService)();\n};\nStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreService,\n  factory: StoreService.ɵfac,\n  providedIn: 'root'\n});\nexport { StoreService };","map":{"version":3,"names":["ajax","BehaviorSubject","StoreService","constructor","cartItemsSubject","carItems$","producst$","getJSON","factory","ɵfac","providedIn"],"sources":["/Users/maimunawahaibi/Desktop/angular-first/src/app/services/store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ajax } from 'rxjs/ajax';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Product } from '../interfaces/product.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoreService {\n\n  private cartItemsSubject = new BehaviorSubject([]);\n  //never expose subjects directly -> use observable\n  carItems$ = this.\n  //products observable\n  producst$ = ajax.getJSON<Product[]>('/assets/data.json');\n  constructor() {}\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,WAAW;AAChC,SAAqBC,eAAe,QAAQ,MAAM;;AAGlD,MAGaC,YAAY;EAOvBC,YAAA;IALQ,KAAAC,gBAAgB,GAAG,IAAIH,eAAe,CAAC,EAAE,CAAC;IAClD;IACA,KAAAI,SAAS,GAAG,IAAI;IAChB;IACAC,SAAS,GAAGN,IAAI,CAACO,OAAO,CAAY,mBAAmB,CAAC;EACzC;;AAPJL,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAM,OAAA,EAAZN,YAAY,CAAAO,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}