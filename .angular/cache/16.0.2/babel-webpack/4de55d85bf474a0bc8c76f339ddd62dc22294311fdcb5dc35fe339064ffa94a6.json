{"ast":null,"code":"import { ajax } from 'rxjs/ajax';\nimport { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass StoreService {\n  constructor() {\n    this.cartItemsSubject = new BehaviorSubject([]);\n    // private totalSubject = new BehaviorSubject<number>(0);\n    //never expose subjects directly -> use observable\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n    this.producst$ = ajax.getJSON('/assets/data.json');\n    // total$ = this.totalSubject.asObservable();\n    this.total$ = this.cartItems$.pipe(map(products => products.reduce((acc, product) => acc + product.price, 0)));\n  }\n  addItemToCart(product) {\n    this.cartItemsSubject.next([...this.cartItemsSubject.getValue(), product]);\n  }\n}\nStoreService.ɵfac = function StoreService_Factory(t) {\n  return new (t || StoreService)();\n};\nStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreService,\n  factory: StoreService.ɵfac,\n  providedIn: 'root'\n});\nexport { StoreService };","map":{"version":3,"names":["ajax","BehaviorSubject","map","StoreService","constructor","cartItemsSubject","cartItems$","asObservable","producst$","getJSON","total$","pipe","products","reduce","acc","product","price","addItemToCart","next","getValue","factory","ɵfac","providedIn"],"sources":["/Users/maimunawahaibi/Desktop/angular-first/src/app/services/store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ajax } from 'rxjs/ajax';\nimport { Observable, BehaviorSubject, map } from 'rxjs';\nimport { Product } from '../interfaces/product.interface';\nimport { scan } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoreService {\n  private cartItemsSubject = new BehaviorSubject<Product[]>([]);\n  // private totalSubject = new BehaviorSubject<number>(0);\n\n  //never expose subjects directly -> use observable\n  cartItems$ = this.cartItemsSubject.asObservable();\n  producst$ = ajax.getJSON<Product[]>('/assets/data.json');\n  // total$ = this.totalSubject.asObservable();\n  total$ = this.cartItems$.pipe(\n    map((products) => products.reduce((acc, product) => acc + product.price, 0))\n  );\n  addItemToCart(product: Product): void {\n    this.cartItemsSubject.next([...this.cartItemsSubject.getValue(), product]);\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,WAAW;AAChC,SAAqBC,eAAe,EAAEC,GAAG,QAAQ,MAAM;;AAIvD,MAGaC,YAAY;EAHzBC,YAAA;IAIU,KAAAC,gBAAgB,GAAG,IAAIJ,eAAe,CAAY,EAAE,CAAC;IAC7D;IAEA;IACA,KAAAK,UAAU,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;IACjD,KAAAC,SAAS,GAAGR,IAAI,CAACS,OAAO,CAAY,mBAAmB,CAAC;IACxD;IACA,KAAAC,MAAM,GAAG,IAAI,CAACJ,UAAU,CAACK,IAAI,CAC3BT,GAAG,CAAEU,QAAQ,IAAKA,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,CAACC,KAAK,EAAE,CAAC,CAAC,CAAC,CAC7E;;EACDC,aAAaA,CAACF,OAAgB;IAC5B,IAAI,CAACV,gBAAgB,CAACa,IAAI,CAAC,CAAC,GAAG,IAAI,CAACb,gBAAgB,CAACc,QAAQ,EAAE,EAAEJ,OAAO,CAAC,CAAC;EAC5E;;AAbWZ,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAiB,OAAA,EAAZjB,YAAY,CAAAkB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPnB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}